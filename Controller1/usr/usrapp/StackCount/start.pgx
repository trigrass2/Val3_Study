<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="start">
    <Code><![CDATA[begin
  //栈内存的数量
  //哪些内容需要用到内存
  //1.调用栈
  //2.调用栈的每个程序的参数
  //3.调用栈的每个程序的局部变量
  // 默认情况下，每个任务有栈内存的5000个字节
  
  //val3 有没有使用堆
  //程序的内核是什么
  
  //  堆栈空间分配
  //栈（操作系统）：由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。
  //堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。
  //堆栈缓存方式
  //栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。
  //堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些。
  //堆栈数据结构区别
  //堆（数据结构）：堆可以被看成是一棵树，如：堆排序。
  //栈（数据结构）：一种先进后出的数据结构。
  
  
  
  //val3 没有堆的概念
  //val3 变量不能在程序中进行定义，只能预先定义
  // Val3 runtime error. Not enough runtime memory. Increase it using the application's parameters, then restart application..
  // 局部单字符串变量
  //可以运行29次  Runtime memory:5000
  //可以运行88次  Runtime memory:15000
  
  
  // 局部单字符串参数
  //可以运行26次  Runtime memory:5000
  //可以运行80次  Runtime memory:15000
  
  //与想象中的有点不一样
  //
  //val3 不能递归
  
  //能否无穷递归呢？
  
  
  
  
  
  
  
  //递归
  nNum=0
  call recursion()
  // call recursion1(sString)
  
//  call recursion2(sString)
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
end]]></Code>
  </Program>
</Programs>